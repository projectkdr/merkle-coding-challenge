{"version":3,"file":"static/css/main.910564d3.css","mappings":"AAGA,WAIE,iBADA,kBADA,kBADA,mBAIA,WCkDE,wBDvDJ,WAQI,aC+CA,wBDvDJ,WAYI,aC2CA,wBDvDJ,WAgBI,aCuCA,yBDvDJ,WAoBI,cAKF,qBACE,eAGA,0BACE,8DACA,4BACA,uBACA,+BAKF,2BACE,kDAGA,gCACE,0BEzBR,WACE,cACA,cAZkB,CD+ChB,wBCrCJ,WAKI,wBACA,wBAXgB,CAYhB,gBD8BA,wBCrCJ,WAWI,aACA,aAhBiB,EDyCjB,yBCrCJ,WAgBI,aACA,aApBsB,EChB1B,KAKE,mCACA,kCAJA,oIADA,QAKA,CAEA,OACE,sBCRJ,wBACE,mBAGF,4BAGE,YACA,mBAHA,kBACA,UAEA,CH6DE,2BGjEJ,4BAOI,oBAIJ,oBACE,gBACA,wBAIE,cAFA,eACA,iBAFA,UAGA,CAIJ,oBAWE,mBATA,kBCtBe,CDwBf,UC9BM,CDoCN,aALA,YAOA,uBAHA,UAFA,kBAJA,kBAFA,yBAOA,SAFA,UAMA,CHkBE,wBG9BJ,oBAeI,YACA,YAIJ,sBACE,8BACA,UC5CW,CD6CX,eAGA,gBACA,mBAHA,mBAKA,kBADA,iBAHA,wBAIA,CAGF,oBACE,aCxDe,CDyDf,eACA,iBACA,mBAEA,sBACE,cACA,qBAIJ,mBAGE,mBAFA,UClEc,CDmEd,YACA,CAEA,uBAEE,YACA,iBAFA,UAEA,CAGF,wBACE,eACA,iBElFJ,8BACI,kBDDY,CCEZ,oBLqDA,wBKvDJ,8BAKQ,sDACA,qBLiDJ,wBKvDJ,8BAUQ,qBL6CJ,yBKvDJ,8BAcQ,eDfA,ECkBR,oBAII,mBAHA,wBDlBY,CCmBZ,UDpBI,CCqBJ,aAIA,eACA,gBACA,iBAJA,oBACA,oBAIA,yBL4BA,wBKtCJ,oBAcQ,uDACA,4BAFA,cAEA,ELuBJ,wBKtCJ,oBAmBQ,eACA,iBACA,gBLiBJ,yBKtCJ,oBAyBQ,0BAIR,iBACI,aACA,mBACA,eLMA,wBKTJ,iBAMQ,gBLGJ,wBKTJ,iBAUQ","sources":["styles/base/_common.scss","styles/base/_breakpoint.scss","styles/base/_grid.scss","index.scss","components/Story/Story.module.scss","styles/base/_color.scss","views/Layout/News/News.module.scss"],"sourcesContent":["@use '../base/breakpoint' as *;\r\n@use '../base/color' as *;\r\n\r\n.container {\r\n  padding-right: 15px;\r\n  padding-left: 15px;\r\n  margin-right: auto;\r\n  margin-left: auto;\r\n  width: 100%;\r\n\r\n  @include media-breakpoint-up('sm') {\r\n    width: 540px;\r\n  }\r\n\r\n  @include media-breakpoint-up('md') {\r\n    width: 720px;\r\n  }\r\n\r\n  @include media-breakpoint-up('lg') {\r\n    width: 960px;\r\n  }\r\n\r\n  @include media-breakpoint-up('xl') {\r\n    width: 1140px;\r\n  }\r\n}\r\n\r\n.animation-range {\r\n  img {\r\n    transition: 0.4s;\r\n  }\r\n  .title {\r\n    a {\r\n      background-image: linear-gradient(transparent 90%, $tertiary-color 2px);\r\n      background-repeat: no-repeat;\r\n      background-size: 0 100%;\r\n      transition: background-size 0.8s;\r\n    }\r\n  }\r\n\r\n  &:hover {\r\n    img {\r\n      transform: scale(1.1);\r\n    }\r\n    .title {\r\n      a {\r\n        background-size: 100% 100%;\r\n      }\r\n    }\r\n  }\r\n}\r\n","/** Breakpoint viewport sizes and media queries **/\r\n\r\n// Breakpoints\r\n$grid-breakpoints: (\r\n  // Extra Small Mobile\r\n  'xs': 0,\r\n  // Small Mobile\r\n  'sm': 576px,\r\n  // Tablet\r\n  'md': 768px,\r\n  // Large Desktop\r\n  'lg': 992px,\r\n  // Extra Large Desktop\r\n  'xl': 1200px,\r\n  // 2 Extra Large Desktop\r\n  'xxl': 1400px\r\n);\r\n\r\n/* Functions */\r\n\r\n// Name of the next breakpoint, or null for the last breakpoint.\r\n// Sample: breakpoint-next(sm) return md\r\n@function breakpoint-next($name) {\r\n  $breakpoint-names: map-keys($grid-breakpoints);\r\n  $n: index($breakpoint-names, $name);\r\n  @if not $n {\r\n    @error \"breakpoint `#{$name}` not found in `#{$grid-breakpoints}`\";\r\n  }\r\n  @return if($n < length($breakpoint-names), nth($breakpoint-names, $n + 1), null);\r\n}\r\n\r\n// Minimum breakpoint width. Null for the smallest (first) breakpoint.\r\n// Sample: breakpoint-min(sm) return 576px\r\n@function breakpoint-min($name) {\r\n  $min: map-get($grid-breakpoints, $name);\r\n  @return if($min != 0, $min, null);\r\n}\r\n\r\n// Maximum breakpoint width.\r\n// The maximum value is reduced by 0.02px to work around the limitations of\r\n// `min-` and `max-` prefixes and viewports with fractional widths.\r\n// See https://www.w3.org/TR/mediaqueries-4/#mq-min-max\r\n// Uses 0.02px rather than 0.01px to work around a current rounding bug in Safari.\r\n// See https://bugs.webkit.org/show_bug.cgi?id=178261\r\n//\r\n// Sample: breakpoint-max(md) return 767.98px\r\n@function breakpoint-max($name) {\r\n  $max: map-get($grid-breakpoints, $name);\r\n  @return if($max and $max > 0, $max - 0.02, null);\r\n}\r\n\r\n/* Mixins */\r\n// Media of at least the minimum breakpoint width. No query for the smallest breakpoint.\r\n// Makes the @content apply to the given breakpoint and wider.\r\n/// @param {string} $name - name of breakpoint in $grid-breakpoints\r\n@mixin media-breakpoint-up($name) {\r\n  $min: breakpoint-min($name);\r\n  @if $min {\r\n    @media (min-width: $min) {\r\n      @content;\r\n    }\r\n  } @else {\r\n    @content;\r\n  }\r\n}\r\n\r\n// Media of at most the maximum breakpoint width. No query for the largest breakpoint.\r\n// Makes the @content apply to the given breakpoint and narrower.\r\n/// @param {string} $name - name of breakpoint in $grid-breakpoints\r\n@mixin media-breakpoint-down($name) {\r\n  $max: breakpoint-max($name);\r\n  @if $max {\r\n    @media (max-width: $max) {\r\n      @content;\r\n    }\r\n  } @else {\r\n    @content;\r\n  }\r\n}\r\n\r\n// Media that spans multiple breakpoint widths.\r\n// Makes the @content apply between the min and max breakpoints\r\n/// @param {string} $lower - min name of breakpoint in $grid-breakpoints\r\n/// @param {string} $upper - max name of breakpoint in $grid-breakpoints\r\n@mixin media-breakpoint-between($lower, $upper) {\r\n  $min: breakpoint-min($lower);\r\n  $max: breakpoint-max($upper);\r\n\r\n  @if $min != null and $max != null {\r\n    @media (min-width: $min) and (max-width: $max) {\r\n      @content;\r\n    }\r\n  } @else if $max == null {\r\n    @include media-breakpoint-up($lower) {\r\n      @content;\r\n    }\r\n  } @else if $min == null {\r\n    @include media-breakpoint-down($upper) {\r\n      @content;\r\n    }\r\n  }\r\n}\r\n\r\n// Media between the breakpoint's minimum and maximum widths.\r\n// No minimum for the smallest breakpoint, and no maximum for the largest one.\r\n// Makes the @content apply only to the given breakpoint, not viewports any wider or narrower.\r\n/// @param {string} $name - name of breakpoint in $grid-breakpoints\r\n@mixin media-breakpoint-only($name) {\r\n  $min: breakpoint-min($name);\r\n  $next: breakpoint-next($name);\r\n  $max: breakpoint-max($next);\r\n\r\n  @if $min != null and $max != null {\r\n    @media (min-width: $min) and (max-width: $max) {\r\n      @content;\r\n    }\r\n  } @else if $max == null {\r\n    @include media-breakpoint-up($name) {\r\n      @content;\r\n    }\r\n  } @else if $min == null {\r\n    @include media-breakpoint-down($next) {\r\n      @content;\r\n    }\r\n  }\r\n}\r\n","@use '../base/breakpoint' as *;\r\n\r\n// Set the number of columns and the gutter width for each screen size\r\n$mobileColumns: 1;\r\n$tabletColumns: 3;\r\n$desktopColumns: 4;\r\n$largeDesktopColumns: 5;\r\n\r\n$gutterWidth: 10px;\r\n\r\n// Calculate the column width for each screen size\r\n$mobileColumnWidth: 100%;\r\n// $tabletColumnWidth: calc((100% - $gutterWidth * $tabletColumns) / $tabletColumns);\r\n// $desktopColumnWidth: calc((100% - $gutterWidth * $desktopColumns) / $desktopColumns);\r\n// $largeDesktopColumnWidth: calc((100% - $gutterWidth * $largeDesktopColumns) / $largeDesktopColumns);\r\n\r\n$tabletColumnWidth: calc(100% / $tabletColumns);\r\n$desktopColumnWidth: calc(100% / $desktopColumns);\r\n$largeDesktopColumnWidth: calc(100% / $largeDesktopColumns);\r\n\r\n// Define the column classes for each screen size\r\n.col-width {\r\n  flex: 0 0 $mobileColumnWidth;\r\n  max-width: $mobileColumnWidth;\r\n\r\n  @include media-breakpoint-up('md') {\r\n    flex: 0 0 $tabletColumnWidth;\r\n    max-width: $tabletColumnWidth;\r\n    padding: 0 $gutterWidth;\r\n  }\r\n\r\n  @include media-breakpoint-up('lg') {\r\n    flex: 0 0 $desktopColumnWidth;\r\n    max-width: $desktopColumnWidth;\r\n  }\r\n\r\n  @include media-breakpoint-up('xl') {\r\n    flex: 0 0 $largeDesktopColumnWidth;\r\n    max-width: $largeDesktopColumnWidth;\r\n  }\r\n}\r\n","@forward './styles/main.scss';\n\nbody {\n  margin: 0;\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n    sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n\n  * {\n    box-sizing: border-box;\n  }\n}\n","@use '../../styles/base/breakpoint' as *;\r\n@use '../../styles/base/color' as *;\r\n\r\n.container {\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.image_wrapper {\r\n  position: relative;\r\n  width: 100%;\r\n  height: auto;\r\n  margin-bottom: 16px;\r\n\r\n  @include media-breakpoint-down('md') {\r\n    margin-bottom: 20px;\r\n  }\r\n}\r\n\r\n.image {\r\n  overflow: hidden;\r\n  img {\r\n    width: 100%;\r\n    max-width: 100%;\r\n    object-fit: cover;\r\n    display: block;\r\n  }\r\n}\r\n\r\n.score {\r\n  text-transform: uppercase;\r\n  background: $score-bg-color;\r\n  text-align: center;\r\n  color: $score-text-color;\r\n  height: 60px;\r\n  width: 60px;\r\n  position: absolute;\r\n  top: 12px;\r\n  left: 12px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  @include media-breakpoint-up('md') {\r\n    height: 54px;\r\n    width: 54px;\r\n  }\r\n}\r\n\r\n.author {\r\n  border-left: 4px solid $tertiary-color;\r\n  color: $text-color;\r\n  font-size: 15px;\r\n  line-height: normal;\r\n  text-transform: uppercase;\r\n  font-weight: 500;\r\n  letter-spacing: 1px;\r\n  padding-left: 8px;\r\n  margin-bottom: 8px;\r\n}\r\n\r\n.title {\r\n  color: $tertiary-color;\r\n  font-size: 18px;\r\n  line-height: 1.44;\r\n  margin-bottom: 18px;\r\n\r\n  a {\r\n    color: inherit;\r\n    text-decoration: none;\r\n  }\r\n}\r\n\r\n.date {\r\n  color: $details-color;\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  svg {\r\n    width: 24px;\r\n    height: 24px;\r\n    margin-right: 8px;\r\n  }\r\n\r\n  span {\r\n    font-size: 15px;\r\n    line-height: 1.47;\r\n  }\r\n}\r\n","\r\n// HEX Color\r\n$white: #ffffff;\r\n$primary-color: #12295d;\r\n$secondary-color: #483062;\r\n$tertiary-color: #0071b8;\r\n$text-color: #222222;\r\n$details-color: #666666;\r\n$score-bg-color: #f23a1d;\r\n$score-text-color: $white;","@use '../../../styles/base/breakpoint' as *;\r\n@use '../../../styles/base/color' as *;\r\n\r\n.header_container {\r\n    background: $primary-color;\r\n    margin-bottom: -40px;\r\n\r\n    @include media-breakpoint-up('md') {\r\n        background: linear-gradient(270deg, $white 50%, $primary-color 0);\r\n        margin-bottom: -44px;\r\n    }\r\n\r\n    @include media-breakpoint-up('lg') {\r\n        margin-bottom: -52px;\r\n    }\r\n\r\n    @include media-breakpoint-up('xl') {\r\n        background: $white;\r\n    }\r\n}\r\n.header {\r\n    background-color: $primary-color;\r\n    color: $white;\r\n    display: flex;\r\n    align-items: center;\r\n    margin-bottom: -40px;\r\n    padding: 50px 0px 68px;\r\n    font-size: 24px;\r\n    font-weight: 500;\r\n    line-height: 1.25;\r\n    text-transform: uppercase;\r\n\r\n    @include media-breakpoint-up('md') {\r\n        padding: 64px 0px;\r\n        flex: 0 0 calc(100% - 50px);\r\n        max-width: calc(100% - 50px);\r\n    }\r\n\r\n    @include media-breakpoint-up('lg') {\r\n        font-size: 36px;\r\n        line-height: 1.22;\r\n        padding: 80px 0px;\r\n    }\r\n\r\n    @include media-breakpoint-up('xl') {\r\n        padding: 94px 0 94px 60px;\r\n    }\r\n}\r\n\r\n.row {\r\n    display: flex;\r\n    flex-direction: row;\r\n    flex-wrap: wrap;\r\n\r\n    @include media-breakpoint-up('md') {\r\n        margin: 0px -10px;\r\n    }\r\n\r\n    @include media-breakpoint-up('lg') {\r\n        padding-left: 50px;\r\n    }\r\n}\r\n"],"names":[],"sourceRoot":""}